<?xml version="1.0" encoding="UTF-8" ?>
<!--xml头部定义-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--SysLogMapper操作接口所在的命名空间-->
<mapper namespace="com.debug.middleware.model.mapper.SysLogMapper" >
  <!--查询得到的结果集映射配置-->
  <resultMap id="BaseResultMap" type="com.debug.middleware.model.entity.SysLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <!--定义查询的SQL片段-->
  <sql id="Base_Column_List" >
    id, user_id, module, data, memo, create_time
  </sql>
  <!--根据主键id查询日志记录-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--根据主键id删除日志记录-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--插入日志记录-->
  <insert id="insert" parameterType="com.debug.middleware.model.entity.SysLog" >
    insert into sys_log (id, user_id, module, 
      data, memo, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, 
      #{data,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <!--插入日志记录-->
  <insert id="insertSelective" parameterType="com.debug.middleware.model.entity.SysLog" >
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="data != null" >
        data,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!--更新日志记录-->
  <update id="updateByPrimaryKeySelective" parameterType="com.debug.middleware.model.entity.SysLog" >
    update sys_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--更新日志记录-->
  <update id="updateByPrimaryKey" parameterType="com.debug.middleware.model.entity.SysLog" >
    update sys_log
    set user_id = #{userId,jdbcType=INTEGER},
      module = #{module,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>